{"version":3,"file":"static/js/958.8ce9de02.chunk.js","mappings":"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","sources":["components/Main/Users/UsersList/UserItem/UserItem.tsx","components/Main/Users/UsersList/UsersList.tsx","components/Main/Users/Users.tsx","components/PaginationApp/PaginationApp.tsx"],"sourcesContent":["import {Button, List} from \"antd\";\r\nimport AvatarApp from \"../../../../AvatarApp/AvatarApp\";\r\nimport {useAppSelector} from \"../../../../../features/hooks\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {memo} from \"react\";\r\nimport {selectCurrentUser} from \"../../../../../features/auth/authSlice\";\r\nimport useMutationResponseHandler from \"../../../../../hooks/useMutationResponseHandler\";\r\nimport {useToggleFollowUsersMutation} from \"../../../../../features/api/apiSlice\";\r\n\r\ninterface UserItemProps {\r\n    user: IUser,\r\n    page: number,\r\n    pageSize: number\r\n}\r\n\r\nconst UserItem = ({user, page, pageSize}: UserItemProps) => {\r\n    const currentUser = useAppSelector(selectCurrentUser)\r\n    const navigate = useNavigate();\r\n    const [toggleFollow] = useToggleFollowUsersMutation()\r\n    const userURL = `/profile/${user.id}`\r\n    const handleResponse = useMutationResponseHandler()\r\n    const isCurrentUserItem = currentUser && currentUser.id === user.id\r\n\r\n    const handleToggleFollow = () => {\r\n        if (!currentUser) {\r\n            navigate('/login')\r\n            return\r\n        }\r\n        handleResponse(toggleFollow({userId: user.id, isFollowed: user.followed, page, pageSize}))\r\n    }\r\n\r\n    return (\r\n        <List.Item\r\n            style={{minHeight: '73px'}}\r\n            actions={\r\n                isCurrentUserItem\r\n                    ? undefined\r\n                    : [<Button type='primary'\r\n                               onClick={handleToggleFollow}>\r\n                        {user.followed ? 'Unfollow' : 'Follow'}\r\n                    </Button>]\r\n            }>\r\n            <List.Item.Meta\r\n                avatar={<AvatarApp src={user.photos.small} size={40} key={user.id}/>}\r\n                title={<Link to={userURL}>{user.name}</Link>}\r\n                description={user.status}\r\n            />\r\n        </List.Item>\r\n    )\r\n}\r\n\r\nexport default memo(UserItem)","import {List} from \"antd\";\r\nimport UserItem from \"./UserItem/UserItem\";\r\n\r\ninterface UsersListProps {\r\n    users: IUser[],\r\n    page: number,\r\n    pageSize: number,\r\n    isFetching: boolean\r\n}\r\n\r\nconst UsersList = ({users, page, pageSize, isFetching}: UsersListProps) => {\r\n\r\n    const style = isFetching ? {opacity: 0.5, transition: 'opacity 0.3s'} : {opacity: 1, transition: 'opacity 0.3s'}\r\n\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={users}\r\n            renderItem={user => (<UserItem user={user} page={page} pageSize={pageSize}/>)}\r\n            style={style}\r\n            data-testid=\"users-list\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default UsersList","import UsersList from \"./UsersList/UsersList\";\r\nimport {useEffect, useState} from \"react\";\r\nimport PaginationApp from \"../../PaginationApp/PaginationApp\";\r\nimport {useGetUsersQuery} from \"../../../features/api/apiSlice\";\r\nimport ContentLoader from \"../../ContentLoader/ContentLoader\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {FloatButton} from \"antd\";\r\n\r\nconst Users = (): JSX.Element => {\r\n    let [searchParams, setSearchParams] = useSearchParams();\r\n    const queryPage = Number(searchParams.get('page')) || 1\r\n\r\n    const [currentPage, setCurrentPage] = useState(queryPage);\r\n    const [pageSize] = useState(20);\r\n\r\n    useEffect(() => {\r\n        if (currentPage !== queryPage) {\r\n            setCurrentPage(queryPage)\r\n        }\r\n    }, [queryPage, currentPage])\r\n\r\n    const {\r\n        data,\r\n        isLoading,\r\n        isFetching,\r\n        isSuccess,\r\n        isError,\r\n        error,\r\n    } = useGetUsersQuery({page: currentPage, pageSize})\r\n\r\n\r\n    const handlePageChange = (current: number) => {\r\n        setCurrentPage(current);\r\n\r\n        setSearchParams({page: current.toString(), count: pageSize.toString()})\r\n    }\r\n\r\n    return (\r\n        <ContentLoader isError={isError} isLoading={isLoading} isSuccess={isSuccess} error={error}>\r\n            {data && <>\r\n                <FloatButton.BackTop style={{bottom: '100px'}}/>\r\n                <UsersList users={data.users} page={currentPage} pageSize={pageSize} isFetching={isFetching}/>\r\n                <PaginationApp total={data.totalCount} pageSize={pageSize}\r\n                               current={currentPage}\r\n                               handler={handlePageChange}/>\r\n            </>}\r\n        </ContentLoader>\r\n    )\r\n}\r\n\r\nexport default Users","import {Pagination} from \"antd\";\r\n\r\ntype PaginationAppProps = {\r\n    total: number,\r\n    pageSize: number,\r\n    current: number,\r\n    handler: (page: number, pageSize: number) => void\r\n}\r\n\r\n\r\nconst PaginationApp = ({total, pageSize, current, handler}: PaginationAppProps): JSX.Element => {\r\n\r\n    const handlePageChange = (page: number) => {\r\n        handler(page, pageSize);\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: 'center', marginTop: 12, height: 32, lineHeight: '32px',}}>\r\n            <Pagination total={total}\r\n                        pageSize={pageSize}\r\n                        current={current}\r\n                        hideOnSinglePage={true}\r\n                        onChange={handlePageChange}\r\n                        showSizeChanger={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationApp"],"names":["UserItem","_ref","user","page","pageSize","currentUser","useAppSelector","selectCurrentUser","navigate","useNavigate","_useToggleFollowUsers","useToggleFollowUsersMutation","toggleFollow","_slicedToArray","userURL","concat","id","handleResponse","useMutationResponseHandler","isCurrentUserItem","_jsx","List","style","minHeight","actions","undefined","Button","type","onClick","userId","isFollowed","followed","children","avatar","AvatarApp","src","photos","small","size","title","Link","to","name","description","status","memo","users","isFetching","opacity","transition","itemLayout","dataSource","renderItem","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryPage","Number","get","_useState","useState","_useState2","currentPage","setCurrentPage","_useState3","useEffect","_useGetUsersQuery","useGetUsersQuery","data","isLoading","isSuccess","isError","error","ContentLoader","_jsxs","_Fragment","FloatButton","bottom","UsersList","PaginationApp","total","totalCount","current","handler","toString","count","textAlign","marginTop","height","lineHeight","Pagination","hideOnSinglePage","onChange","showSizeChanger"],"sourceRoot":""}