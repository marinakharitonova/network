{"version":3,"file":"static/js/580.e6751d36.chunk.js","mappings":"8NAmCA,EAzBqB,SAAC,GAAgD,IAA/CA,EAA8C,EAA9CA,SACnB,OACI,SAAC,KAAD,CACIC,WAAW,aACXC,WAAYF,EACZG,OAAO,EACPC,MAAO,CAAC,EACRC,UAAW,YACXC,WAAY,SAAAC,GAAO,OACf,SAAC,UAAD,CAAWH,MAAO,CACdI,QAAS,IACTC,OAAQ,QAFZ,UAII,SAAC,eAAD,CACIC,QAAQ,SAAC,KAAD,CAAMC,GAAE,mBAAcJ,EAAQK,QAA9B,UAAwC,SAACC,EAAA,EAAD,CAAWC,IAAKP,EAAQQ,MACbC,KAAM,OACjEC,OAAO,SAAC,KAAD,CAAMN,GAAE,mBAAcJ,EAAQK,QAA9B,SAAyCL,EAAQW,WACxDC,YAAaZ,EAAQA,WATd,GAe9B,E,iCC0BD,EAnDuB,SAAC,GAAwD,IAAvDa,EAAsD,EAAtDA,cACrB,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACA,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAzBC,GAAT,gBAEAC,EAAAA,EAAAA,YAAU,WACND,EAAY,CAAC,EAChB,GAAE,IAWH,OACI,UAAC,IAAD,CACIE,KAAK,aACLJ,KAAMA,EACNK,SAbS,SAACC,GACdR,EAAcQ,EAAOrB,SACrBe,EAAKO,aACR,EAWOC,aAAa,MACb1B,MAAO,CAAC2B,UAAW,QALvB,WAOI,SAAC,SAAD,CACIL,KAAK,UACLtB,MAAO,CAAC4B,aAAc,KAF1B,UAII,SAACC,EAAA,EAAD,CAAUC,WAAS,EAACC,UAAW,IAAKC,YAAa,yBAGrD,SAAC,SAAD,CAAWC,cAAY,EAACjC,MAAO,CAAC4B,aAAc,GAA9C,SACK,kBACG,+BACI,SAAC,IAAD,CACIM,KAAK,UACLC,SAAS,SACTC,UAxBZlB,EAAKmB,gBAAe,GAAMlC,QAqBlB,mBAFP,MAgBhB,E,sBC3BD,GAAemC,EAAAA,EAAAA,IAxBF,WAET,OAA0BC,EAAAA,EAAAA,MAAnBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UACb,GAAsBC,EAAAA,EAAAA,MAAfC,GAAP,eAEA,OAEI,4BACI,gBAAK3C,MAAO,CACR4B,aAAc,OACdgB,UAAW,QACXC,UAAW,QACXC,SAAU,OACVC,OAAQ,oBACRC,aAAc,OANlB,SAQKP,GAAaD,EAAKS,OAAS,IAAK,SAAC,EAAD,CAAcrD,SAAU4C,OAG7D,SAAC,EAAD,CAAgBxB,cAAe2B,MAG1C,G","sources":["components/Main/Chat/MessagesList/MessagesList.tsx","components/Main/Chat/NewMessageForm/NewMessageForm.tsx","components/Main/Chat/Chat.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {ChatMessage} from \"../../../../features/api/apiSlice\";\r\nimport {List} from \"antd\";\r\nimport AvatarApp from \"../../../AvatarApp/AvatarApp\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype MessagesListProps = {\r\n    messages: ChatMessage[]\r\n}\r\n\r\nconst MessagesList = ({messages}: MessagesListProps): JSX.Element => {\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={messages}\r\n            split={false}\r\n            style={{}}\r\n            className={'chat-list'}\r\n            renderItem={message => (\r\n                <List.Item style={{\r\n                    padding: '0',\r\n                    margin: '10px',\r\n                }}>\r\n                    <List.Item.Meta\r\n                        avatar={<Link to={`/profile/${message.userId}`}><AvatarApp src={message.photo}\r\n                                                                                   size={40}/></Link>}\r\n                        title={<Link to={`/profile/${message.userId}`}>{message.userName}</Link>}\r\n                        description={message.message}\r\n                    />\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MessagesList","import TextArea from \"antd/es/input/TextArea\";\r\nimport {Button, Form} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\ntype NewMessageFormProps = {\r\n    onMessageSend: (v: string) => void\r\n}\r\n\r\nconst NewMessageForm = ({onMessageSend} : NewMessageFormProps): JSX.Element => {\r\n    const [form] = Form.useForm();\r\n    const [, forceUpdate] = useState({});\r\n\r\n    useEffect(() => {\r\n        forceUpdate({});\r\n    }, []);\r\n\r\n    const onFinish = (values: any) => {\r\n        onMessageSend(values.message)\r\n        form.resetFields()\r\n    }\r\n\r\n    const isBtnDisabled = () => {\r\n        return !form.getFieldsValue(true).message\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            name=\"newMessage\"\r\n            form={form}\r\n            onFinish={onFinish}\r\n            autoComplete=\"off\"\r\n            style={{marginTop: 'auto'}}\r\n        >\r\n            <Form.Item\r\n                name=\"message\"\r\n                style={{marginBottom: '0'}}\r\n            >\r\n                <TextArea showCount maxLength={300} placeholder={'Type your message'}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item shouldUpdate style={{marginBottom: 0}}>\r\n                {() => (\r\n                    <>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            disabled={isBtnDisabled()}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </>\r\n\r\n                )}\r\n            </Form.Item>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default NewMessageForm","import React from \"react\";\r\nimport MessagesList from \"./MessagesList/MessagesList\";\r\nimport NewMessageForm from \"./NewMessageForm/NewMessageForm\";\r\nimport {withAuth} from \"../../../hoc/withAuth\";\r\nimport {useGetMessagesQuery, useSendMessageMutation} from \"../../../features/chat/chatSlice\";\r\n\r\nconst Chat = (): JSX.Element => {\r\n\r\n    const {data, isSuccess} = useGetMessagesQuery()\r\n    const [sendMessage] = useSendMessageMutation()\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div style={{\r\n                marginBottom: '36px',\r\n                minHeight: '500px',\r\n                maxHeight: '500px',\r\n                overflow: 'auto',\r\n                border: '1px solid #d9d9d9',\r\n                borderRadius: '6px'\r\n            }}>\r\n                {isSuccess && data.length > 0 && <MessagesList messages={data}/>}\r\n            </div>\r\n\r\n            <NewMessageForm onMessageSend={sendMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuth(Chat)"],"names":["messages","itemLayout","dataSource","split","style","className","renderItem","message","padding","margin","avatar","to","userId","AvatarApp","src","photo","size","title","userName","description","onMessageSend","Form","form","useState","forceUpdate","useEffect","name","onFinish","values","resetFields","autoComplete","marginTop","marginBottom","TextArea","showCount","maxLength","placeholder","shouldUpdate","type","htmlType","disabled","getFieldsValue","withAuth","useGetMessagesQuery","data","isSuccess","useSendMessageMutation","sendMessage","minHeight","maxHeight","overflow","border","borderRadius","length"],"sourceRoot":""}